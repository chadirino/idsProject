// menu system

package draft;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;

public class MenuGUI extends JFrame {

    Container cp;
    JMenuBar menuBar;
    JMenu menuMenu, menuItemMenu, ingredientMenu;
    JLabel lbRecipeName;
    JTextField tfRecipeName;
    JPanel pHome, pIngredients, pUpdate, pHistory, pCreate;
    JButton btnHome, btnUpdate, btnSaveUpdate, btnCreate, btnSaveCreate, btnHistory, btnIngredients;
    JTable tblInv, tblInvNoEdit, tblIng, tblIngNoEdit, tblRpIng, tblRpIngNoEdit;
    JScrollPane spInv, spInvNoEdit, spIng, spIngNoEdit, spRpIng, spRpIngNoEdit;
    TableModel nonEditable, editable;
    ActionListenerMain aListen;

    public MenuGUI() {

        // ======================================================
        //                         data
        // ======================================================

        String[] columnNames = {"#","Dish Name"};
        String[] data[] = {{"001","Fajitas"},{"002","Mac & Cheese"},
        {"003","Cobb Salad"},{"004","Key Lime Pie"},{"005","Reuben Sandwich"},
        {"006","Burger"},{"007","Baked Potato"},{"008","Lasagna"},
        {"009","Fried Chicken"},{"010","Chicken Fried Rice"},{"011","Pancakes"},
        {"011","Spaghetti"},{"012","Lemon Baked Cod"},{"013","Barbecue Ribs"}};
        
        // ======================================================
        //                        models
        // ======================================================
        
        // table models
        editable = new DefaultTableModel(data, columnNames) {};
        nonEditable = new DefaultTableModel(data, columnNames) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // ======================================================
        //                        tables
        // ======================================================
        
        // inventory tables
        tblInv = new JTable(nonEditable);
        tblInvNoEdit = new JTable(editable);

        // ingredient tables
        tblIng = new JTable(editable);
        tblIngNoEdit = new JTable(nonEditable);
        
        // recipe tables
        tblRpIng = new JTable(editable);
        tblRpIngNoEdit = new JTable(nonEditable);

        // put tables inside scroll panes (give them scroll bars)
        spInv = new JScrollPane(tblInv);
        spInv.setPreferredSize(new Dimension(375,200));
        spInvNoEdit = new JScrollPane(tblInvNoEdit);
        spInvNoEdit.setPreferredSize(new Dimension(375,200));
        spRpIng = new JScrollPane(tblRpIng);
        spRpIng.setPreferredSize(new Dimension(375,200));
        spRpIngNoEdit = new JScrollPane(tblRpIngNoEdit);
        spRpIngNoEdit.setPreferredSize(new Dimension(375,200));
        spIng = new JScrollPane(tblIng);
        spIng.setPreferredSize(new Dimension(375,200));
        spIngNoEdit = new JScrollPane(tblIngNoEdit);
        spIngNoEdit.setPreferredSize(new Dimension(375,200));


        // ======================================================
        //                        menu bar
        // ======================================================

        // ---------------------- menu bar ----------------------

        menuBar = new JMenuBar();
        
        // ----------------------- menus ------------------------
        
        // menus
        menuMenu = new JMenu("Menus");
        menuMenu.setMnemonic(KeyEvent.VK_H);
        menuMenu.getAccessibleContext().setAccessibleDescription("");
        menuBar.add(menuMenu);
        
        // menu items
        menuItemMenu = new JMenu("Menu Items");
        menuItemMenu.setMnemonic(KeyEvent.VK_H);
        menuItemMenu.getAccessibleContext().setAccessibleDescription("");
        menuBar.add(menuItemMenu);
        
        // ingredients
        ingredientMenu = new JMenu("Ingredients");
        ingredientMenu.setMnemonic(KeyEvent.VK_H);
        ingredientMenu.getAccessibleContext().setAccessibleDescription("");
        menuBar.add(ingredientMenu);


        // --------------------- menu items ---------------------

        


        // ======================================================
        //                        buttons
        // ======================================================
        
        // action listener for buttons
        aListen = new ActionListenerMain();

        // button to go back home
        btnHome = new JButton("Home");
        btnHome.addActionListener(aListen);

        // button to open update page
        btnUpdate = new JButton("Update");
        btnUpdate.addActionListener(aListen);
        
        // button to open ingredients page
        btnIngredients = new JButton("Ingredients");
        btnIngredients.addActionListener(aListen);
        
        // button to open history page
        btnHistory = new JButton("History");
        btnHistory.addActionListener(aListen);
        
        // button to save edit
        btnSaveUpdate = new JButton("Save");
        btnSaveUpdate.addActionListener(aListen);
        
        // -- not sure -- 
        btnCreate = new JButton("Create New");
        btnCreate.addActionListener(aListen);
        
        // -- not sure --
        btnSaveCreate = new JButton("Save");
        btnSaveCreate.addActionListener(aListen);

        


        
        // ======================================================
        //                         window
        // ======================================================
        
        // content pane
        cp = getContentPane();
        
        // labels
        lbRecipeName = new JLabel("Recipe Name:");

        // textfields
        tfRecipeName = new JTextField();

        // window
        
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent event) {
                dispose(); 
                new InitialGUI(); 
            }
        });

        setJMenuBar(menuBar);
        setSize(425,350);
        openHome();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    
    // main method
    public static void main(String[] args) {
        new MenuGUI();
    }

    // home page
    private void openHome() {
        setTitle("Menu Manager - Home");
        switchPage();
        pHome = new JPanel();
        pHome.add(btnUpdate);
        pHome.add(btnCreate);
        pHome.add(btnHistory);
        pHome.add(spInvNoEdit);
        cp.add(pHome);
    }

    // update page
    private void openUpdate() {
        setTitle("Menu Manager - Update");
        switchPage();
        pUpdate = new JPanel();
        pUpdate.add(btnHome);
        pUpdate.add(btnUpdate);
        pUpdate.add(spInv);
        cp.add(pUpdate);
    }

    // recipe creation page
    private void openCreate() {
        setTitle("Menu Manger - Create New Recipe");
        switchPage();
        pCreate = new JPanel();
        pCreate.add(btnHome);
        pCreate.add(btnSaveCreate);
        cp.add(pCreate);
    }

    // ingredients page
    private void openIngredients() {
        setTitle("Menu Manger - Ingredients");
        switchPage();
        pIngredients = new JPanel();
        pIngredients.add(btnHome);
        cp.add(pIngredients);
    }

    // history page
    private void openHistory() {
        setTitle("Menu Manager - History");
        switchPage();
        pHistory = new JPanel();
        pHistory.add(btnHome);
        cp.add(pHistory);
    }
    
    // event handling
    class ActionListenerMain implements ActionListener {
		public void actionPerformed(ActionEvent event) {
            if (event.getSource() == btnUpdate) {
                openUpdate(); 
            } else if (event.getSource() == btnHome) {
                openHome(); 
            } else if (event.getSource() == btnHistory) {
                openHistory();
            } else if (event.getSource() == btnSaveUpdate) {
                openHome();
            } else if (event.getSource() == btnCreate) {
                openCreate();
            } else if (event.getSource() == btnIngredients) {
                openIngredients();
            } else if (event.getSource() == btnSaveCreate) {
                openHome();
            }
        }
    }

    // ======================================================
    //                      misc methods
    // ======================================================

    // method for wiping page
    void switchPage() {
        cp.removeAll();
        cp.revalidate();
        cp.repaint();
    }
}